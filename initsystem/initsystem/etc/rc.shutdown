#!/bin/ash

# This file is part of initsystem
#
# Copyright (C) 2014-2021 Val√®re Monseur (archlinux at vale dot re)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

. /etc/rc.conf

export PATH=/opt/busybox

################################################################################
# sanity check #################################################################
################################################################################

if [ $PPID != 1 ]; then
  echo "shutdown: this script should have ppid 1"
  exit 1
fi

################################################################################
# functions ####################################################################
################################################################################

pidwait5() {
  for i in $(seq $1); do
    killall5 -CONT 1>/dev/null 2>/dev/null

    if [ $? -eq 2 ]; then
      return 0
    fi

    sleep .25
  done

  return 1
}

################################################################################
# terminal settings ############################################################
################################################################################

stty sane < /dev/console
echo ""

################################################################################
# local script #################################################################
################################################################################

echo "shutdown: running local shutdown script"

/etc/rc.shutdown.local

################################################################################
# services #####################################################################
################################################################################

echo "shutdown: stopping services"

REVERSE_SERVICES=""
for SERVICE in $SERVICES; do
  REVERSE_SERVICES="$SERVICE $REVERSE_SERVICES"
done

for SERVICE in $REVERSE_SERVICES; do
  /etc/rc.d/$SERVICE has stop && /etc/rc.d/$SERVICE stop
done

################################################################################
# devices ######################################################################
################################################################################

# echo "shutdown: stopping devices manager"

if [ -x /usr/bin/udevd ]; then
  /etc/rc.d/eudev stop
else
  /etc/rc.d/udev stop
fi

################################################################################
# kill processes ###############################################################
################################################################################

echo "shutdown: sending SIGTERM to processes"

killall5 -TERM
pidwait5 120

if [ $? -ne 0 ]; then
  echo "shutdown: sending SIGKILL to processes"

  killall5 -KILL
  pidwait5 120
fi

################################################################################
# random seed ##################################################################
################################################################################

echo "shutdown: saving random seed"

RANDOM_SEED=/var/lib/misc/random-seed

touch $RANDOM_SEED
chmod 600 $RANDOM_SEED

POOL_FILE=/proc/sys/kernel/random/poolsize

if [ -r $POOL_FILE ]; then
  POOL_SIZE=$(cat $POOL_FILE)
else
  POOL_SIZE=512
fi

dd if=/dev/urandom of=$RANDOM_SEED count=1 bs=$POOL_SIZE status=none

################################################################################
# dmesg ########################################################################
################################################################################

echo "shutdown: saving dmesg"

umask 077
dmesg > /var/log/dmesg.shutdown
umask 022

################################################################################
# filesystems ##################################################################
################################################################################

echo "shutdown: disabling swap"

swapoff -a
sync

echo "shutdown: unmounting filesystems"

cut -d ' ' -f 2 < /proc/self/mounts | sort -r | \
while read -r MOUNT; do
  case "$MOUNT" in
    /|/proc|/sys|/run|/dev|/dev/pts) ;;
    *) echo "unmounting $MOUNT"
       umount -r "$MOUNT"
       mountpoint -q "$MOUNT" && { sleep 7; umount -l "$MOUNT"; sleep 7; }
       ;;
  esac
done
sync

echo "shutdown: remounting root filesystem read-only"

mount -o remount,ro /

################################################################################
# finish #######################################################################
################################################################################

sync; sync; sync;

case "$1" in
  halt)
    echo "shutdown: system is halting"
    /usr/bin/busybox halt -f -d 7
    ;;
  poweroff)
    echo "shutdown: system is shutting down"
    /usr/bin/busybox poweroff -f -d 7
    ;;
  reboot)
    echo "shutdown: system is rebooting"
    /usr/bin/busybox reboot -f -d 7
    ;;
esac

echo "error: unexpected shutdown option $1, halting now"
/usr/bin/busybox halt -f -d 7

# vim: set filetype=sh:
